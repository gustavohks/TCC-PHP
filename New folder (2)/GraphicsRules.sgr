log "Parsing configuration script"
set ConfigGroup Config
include "GraphicsCards.sgr"
if (not $isCardFound)
   set cardName $cardNameText
endif
setb textureMemorySizeOK true
if ($textureMemory == 0)
  seti textureMemory       3072
  # setb textureMemorySizeOK false
endif
seti cpuLevelUber       4
seti cpuLevelHigh       3
seti cpuLevelMedium     2
seti cpuLevelLow        1
seti cpuCutoffLow 2500
seti cpuCutoffMed 2900
seti cpuCutoffHigh 3700
seti adjustedCPU $cpuSpeed
setb cpuAMD false
setb cpuIntel false
setb pentium4 false
if (match("${cpu}", "*AuthenticAMD*"))
    setb cpuAMD true
    seti cpuCutoffLow 2200
    seti cpuCutoffMed 2600
    seti cpuCutoffHigh 3400
endif
if (match("${cpu}", "*GenuineIntel*"))
    setb cpuIntel true
    seti cpuCutoffLow 2300
    seti cpuCutoffMed 2700
    seti cpuCutoffHigh 3600
endif
if ( match("${cpu}", "GenuineIntel") and ($cpuFamily == 15) and ($cpuModel >= 0) and ($cpuModel <= 6))
    setb pentium4 true
endif
if ($cpuCount >= 2)
    if ($pentium4)
    	seti adjustedCPU (round($adjustedCPU * 1.1667))
    else
        seti adjustedCPU (round($adjustedCPU * 1.3334))
    endif
else
    seti adjustedCPU (round($adjustedCPU * 1))
endif
if ($osMajorVersion >= 6)
     seti adjustedCPU (($adjustedCPU)-(400))
else
     seti adjustedCPU $adjustedCPU
endif
if ($adjustedCPU <= $cpuCutoffLow)
    seti cpuLevel $cpuLevelLow
elseif ($adjustedCPU <= $cpuCutoffMed)
    seti cpuLevel $cpuLevelMedium
elseif ($adjustedCPU <= $cpuCutoffHigh)
    seti cpuLevel $cpuLevelHigh
else
    seti cpuLevel $cpuLevelUber
endif
seti threadLevelHigh       3
seti threadLevelMedium     2
seti threadLevelLow        1
if ($cpuCount >= 2)
    seti threadLevel $threadLevelHigh
elseif ($hyperthreading > 0)
    seti threadLevel $threadLevelMedium
else
    seti threadLevel $threadLevelLow
endif
seti cardLevelUber          5
seti cardLevelHigh          4
seti cardLevelMedium        3
seti cardLevelLowmedium     2
seti cardLevelLow           1
seti cardLevel     $cardLevelUber
seti isCardMatched false
seti intelShadowColorFix false
setb disableMacAA false
if ($isMac)
    if ($osMajorVersion < 10)
        setb disableMacAA true
    endif
    if ($osMajorVersion == 10 and $osMinorVersion < 6)
        setb disableMacAA true
    endif
endif
if (match("${cardVendor}", "NVIDIA"))
    if(match("${cardName}", "* 1?0M*") or match("${cardName}", "* 2?0M*") or match("${cardName}", "* G1?0M*") or match("${cardName}", "* G2?0M*"))
        seti cardLevel $cardLevelMedium
        seti isCardMatched true
    elseif (match("${cardName}", "*8800*") or match("${cardName}", "*9500*") or match("${cardName}", "*9600 GSO*") or match("${cardName}", "*9600 GT*") or match("${cardName}", "*9800 *") or match("${cardName}", "*GTX 2??*") or match("${cardName}", "*2?00M*") or match("${cardName}", "*3?00M*") or match("${cardName}", "*Quadro*FX 5??0*") or match("${cardName}", "*GT 1?0*") or match("${cardName}", "*GTS 150*") or match("${cardName}", "*GTS 250*") or match("${cardName}", "*GT 2??*") or match("${cardName}", "*GTS 2??*")  or match("${cardName}", "*GTX 2??*") or match("${cardName}", "*GeForce G2??*") or match("${cardName}", "*GT 3??*") or match("${cardName}", "*GTS 3??*")  or match("${cardName}", "*GTX 3??*") or match("${cardName}", "*GeForce 3??*") or match("${cardName}", "*GT 4??*") or match("${cardName}", "*GTS 4??*")  or match("${cardName}", "*GTX 4??*") or match("${cardName}", "*GT 5??*") or match("${cardName}", "*GTS 5??*")  or match("${cardName}", "*GTX 5??*") or match("${cardName}", "*GT 6??*") or match("${cardName}", "*GTX 6??*" or match("${cardName}", "*GTX 9??*"))
        seti cardLevel $cardLevelUber
        seti isCardMatched true
    elseif (match("${cardName}", "*NVS 28?*") or match("${cardName}", "*NVS 30?*") or match("${cardName}", "*5?0M*") or match("${cardName}", "*7?0M*") or match("${cardName}", "*NVS 32?*") or match("${cardName}", "*FX 1500*") or match("${cardName}", "*FX 1600*") or match("${cardName}", "*FX 1700*") or match("${cardName}", "*FX 2000*") or match("${cardName}", "*FX 37?0*") or match("${cardName}", "*FX 4??0*") or match("${cardName}", "*5?0M*") or match("${cardName}", "*7?0M*") or match("${cardName}", "*1?00M*") or match("${cardName}", "*9800M*") or match("${cardName}", "*9600M*") or match("${cardName}", "*7600*") or match("${cardName}", "*7800*") or match("${cardName}", "*79?0*") or match("${cardName}", "*8600*") or match("${cardName}", "*87?0*") or match("${cardName}", "*9400 GT*") or match("${cardName}", "*G100*"))
        seti cardLevel $cardLevelHigh
        seti isCardMatched true
    elseif (match("${cardName}", "*GO??0*") or match("${cardName}", "*GO???0*") or match("${cardName}", "*FX 370*") or match("${cardName}", "*FX 470*") or match("${cardName}", "*FX 570*") or match("${cardName}", "*FX 1400*") or match("${cardName}", "*FX 2500*") or match("${cardName}", "*FX 3000*") or match("${cardName}", "*FX 34?0*") or match("${cardName}", "*FX 3500*") or match("${cardName}", "*3?0M*") or match("${cardName}", "*6500*") or match("${cardName}", "*66?0*") or match("${cardName}", "*6700*") or match("${cardName}", "*6800*") or match("${cardName}", "*7300*") or match("${cardName}", "*7350*") or match("${cardName}", "*7500*") or match("${cardName}", "*76?0*") or match("${cardName}", "*8300*") or match("${cardName}", "*NVS 140M*") or match("${cardName}", "*8400*") or match("${cardName}", "*8500*") or match("${cardName}", "*9100*") or match("${cardName}", "*9200*") or match("${cardName}", "*9300*") or match("${cardName}", "*9400*") or match ("${cardName}", "*NVIDIA Ion*"))
        seti cardLevel $cardLevelMedium
        seti isCardMatched true
    elseif (match("${cardName}", "*4??0*") or match("${cardName}", "*5??0*") or match("${cardName}", "*61?0*") or match("${cardName}", "*62?0*") or match("${cardName}", "*6300*") or match("${cardName}", "*6400*") or match("${cardName}", "*70??*") or match("${cardName}", "*71??*") or match("${cardName}", "*7200*") or match("${cardName}", "*FX 1000*") or match("${cardName}", "*FX 1100*") or match("${cardName}", "*FX 1300*"))
        seti cardLevel $cardLevelLow
        seti isCardMatched true
    else
        seti cardLevel $cardLevelUber
        seti isCardMatched false
    endif
    setProp $ConfigGroup RenderShadowMode 2
    setProp $ConfigGroup ShadowMapAllowNullColor 1
    if ($disableMacAA)
        if (match("${cardName}", "*7300*"))
            setProp $ConfigGroup DisallowEdgeSmoothing 1
        endif
    endif
    if ( match("${cardName}", "*7?00*") or match("${cardName}", "*6?00*"))
        setProp $ConfigGroup DisallowL16RTT 1
        setProp $ConfigGroup DontUsePerlinNoise 1
        setProp $ConfigGroup DisablePerPixelFog 1
    endif
elseif (match("${cardVendor}", "ATI"))
    if (match("${cardName}", "*HD 29?0*") or match("${cardName}", "*HD 36?0*") or match("${cardName}", "*HD 38?0*") or match("${cardName}", "*HD 4??0*") or match("${cardName}", "*HD 5??0*") or match("${cardName}", "*Radeon 5xxx*") or match("${cardName}", "*HD 6??0*") or match("${cardName}", "*HD 7??0*") or match("${cardName}", "*Processor*") or match("${cardName}", "*V77?0*") or match("${cardName}", "*V87?0*"))
        seti cardLevel $cardLevelUber
        seti isCardMatched true
    elseif (match("${cardName}", "*x18??*") or match("${cardName}", "*x19??*") or match("${cardName}", "*HD 31?0*") or match("${cardName}", "*V3600*") or match("${cardName}", "*V37?0*") or match("${cardName}", "*V5600*") or match("${cardName}", "*V5700*") or match("${cardName}", "*V7200*") or match("${cardName}", "*V73?0*") or match("${cardName}", "*V7400*") or match("${cardName}", "*V7600*") or match("${cardName}", "*V86?0*"))
        seti cardLevel $cardLevelHigh
        seti isCardMatched true
    elseif (match("${cardName}", "*x14??*") or match("${cardName}", "*x850*") or match("${cardName}", "*x15??*") or match("${cardName}", "*HD 34??*") or match("${cardName}", "*x16??*") or match("${cardName}", "*HD 23?0*") or match("${cardName}", "*HD 24?0*") or match("${cardName}", "*HD 26?0*"))
        seti cardLevel $cardLevelMedium
        seti isCardMatched true
    elseif (match("${cardName}", "*9800*") or match("${cardName}", "*x600*") or match("${cardName}", "*HD 32??*") or match("${cardName}", "*x7?0*") or match("${cardName}", "*x8?0*") or match("${cardName}", "*FireGL X2*") or match("${cardName}", "*FireGL X3*") or match("${cardName}", "*V3200*") or match("${cardName}", "*V33?0*") or match("${cardName}", "*V3400*") or match("${cardName}", "*V5000*") or match("${cardName}", "*V5100*") or match("${cardName}", "*V5200*") or match("${cardName}", "*V7100*"))
	seti cardLevel $cardLevelLowmedium
	seti isCardMatched true
    elseif (match("${cardName}", "*Rage*") or match("${cardName}", "*XPress*") or match("${cardName}", "*7?00*") or match("${cardName}", "*8?00*") or match("${cardName}", "*95?0*") or match("${cardName}", "*96?0*") or match("${cardName}", "*97?0*") or match("${cardName}", "*x200*") or match("${cardName}", "*x300*") or match("${cardName}", "*x5?0*") or match("${cardName}", "*x10?0*") or match("${cardName}", "*x11?0*") or match("${cardName}", "*x12?0*") or match("${cardName}", "*x13??*") or match("${cardName}", "*FireGL T2*") or match("${cardName}", "*FireGL Z1*") or match("${cardName}", "*FireGL X1*") or match("${cardName}", "*V3100*"))
        seti cardLevel $cardLevelLow
        seti isCardMatched true
    else
        seti cardLevel $cardLevelUber
        seti isCardMatched false
    endif
    if (match("${cardName}", "*HD 2???*") or match("${cardName}", "*HD 3???*") or match("${cardName}", "*HD 4???*") or match("${cardName}", "*HD 5???*") or match("${cardName}", "*Radeon 5xxx*") or match("${cardName}", "*Processor*") or match("${cardName}", "*HD 6???*") or match("${cardName}", "*HD 7???*") or match("${cardName}", "*V37??*") or match("${cardName}", "*V38??*") or match("${cardName}", "*V48??*") or match("${cardName}", "*V57??*") or match("${cardName}", "*V58??*") or match("${cardName}", "*V77??*") or match("${cardName}", "*V78??*") or match("${cardName}", "*V87??*") or match("${cardName}", "*V88??*") or match("${cardName}", "*V98??*") or match("${cardName}", "*M57??*") or match("${cardName}", "*M58??*") or match("${cardName}", "*M77??*") or match("${cardName}", "*M78??*") or match("${cardName}", "*FireStream 91??*") or match("${cardName}", "*FireStream 92??*") or match("${cardName}", "*FireStream 93??*") or match("${cardName}", "*FirePro 24??*") or match("${cardName}", "*FirePro RG220*"))
        setProp $ConfigGroup RenderShadowMode 2
    else
        setProp $ConfigGroup RenderShadowMode 1
    endif
    setProp $ConfigGroup ShadowMapForceDF16Available 1
    if ($osMajorVersion >= 6 and versionLessThan("7.14.0010.0630", "${driverVersion}") and not versionLessThan("7.14.0010.0636", "${driverVersion}"))
        setProp $ConfigGroup ReportOldGraphicsDriver 1
    endif
    if ($disableMacAA)
        if (match("${cardName}", "*X16??*") or match("${cardName}", "*X19??*"))
            setProp $ConfigGroup DisallowEdgeSmoothing 1
        endif
    endif
    if ( match("${cardName}", "*HD 7???*") or match("${cardName}", "*HD 5???*") or match("${cardName}", "*Radeon 5xxx*") or match("${cardName}", "*HD 6???*") or match("${cardName}", "*HD 7???*") or match("${cardName}", "*V57??*") or match("${cardName}", "*V58??*")  )
        setProp $ConfigGroup DisallowL16RTT 1
    endif
    if ( match("${cardName}", "*HD 5???*") or match("${cardName}", "*Radeon 5xxx*") or match("${cardName}", "*HD 6???*")  or match("${cardName}", "*V57??*") or match("${cardName}", "*V58??*")  )
        setProp $ConfigGroup DontUsePerlinNoise 1
    endif
elseif (match("${cardVendor}", "Intel"))
    seti intelShadowColorFix true
    if (match("${cardName}", "*Havendale*"))
	seti cardLevel $cardLevelMedium
	seti isCardMatched true
    elseif (match("${cardName}", "*4?00*"))
	seti cardLevel $cardLevelLowmedium
	seti isCardMatched true
    elseif (match("${cardName}", "*SandyBridge*"))
	seti cardLevel $cardLevelMedium
	seti isCardMatched true
    elseif (match("${cardName}", "*IvyBridge*"))
	seti cardLevel $cardLevelMedium
	seti isCardMatched true
    else
        seti cardLevel $cardLevelLow
        seti isCardMatched true
    endif
    setProp $ConfigGroup RenderShadowMode 2
    setProp $ConfigGroup ShadowMapAllowNullColor 1
    if ($disableMacAA)
        if (match("${cardName}", "*3???*")  or match("${cardName}", "*9??*"))
            setProp $ConfigGroup DisallowEdgeSmoothing 1
        endif
    endif
elseif (match("${cardVendor}", "S3"))
    if (match("${cardName}", "*4?0*") or match("${cardName}", "*5?0*"))
	seti cardLevel $cardLevelLow
	seti isCardMatched true
    else
        seti cardLevel $cardLevelUber
        seti isCardMatched false
    endif
endif
if (match("${cardName}", "* AGP*"))
    if ($cardLevel >= 2)
        seti cardLevel (($cardLevel) - (1))
    endif
endif
if ($isMac)
    setProp $ConfigGroup ShadowMapForceDF16Available 0
	setProp $ConfigGroup RenderShadowMode 4
endif
seti gpumemLevelUber         4
seti gpumemLevelHigh         3
seti gpumemLevelMedium       2
seti gpumemLevelLow          1
seti gpumemLevel $gpumemLevelUber
if ($textureMemory <= 112)
    seti gpumemLevel $gpumemLevelLow
elseif ($textureMemory <= 240)
    seti gpumemLevel $gpumemLevelMedium
elseif ($textureMemory <= 368)
    seti gpumemLevel $gpumemLevelHigh
endif
seti ramLevelUber         4
seti ramLevelHigh         3
seti ramLevelMedium       2
seti ramLevelLow          1
if ($osMajorVersion >= 6)
     seti adjustedMemory (($memory)-(512))
else
     seti adjustedMemory $memory
endif
if($adjustedMemory <= 1024)
    seti ramLevel $ramLevelLow
elseif($adjustedMemory <= 1536)
    seti ramLevel $ramLevelMedium
elseif($adjustedMemory <= 2560)
    seti ramLevel $ramLevelHigh
else
    seti ramLevel $ramLevelUber
endif
if ($forcedCardLevel > 0)
  seti cardLevel $forcedCardLevel
endif
if ($forcedCpuLevel > 0)
  seti cpuLevel $forcedCpuLevel
endif
seti Off 0
seti On  1
seti Low        1
seti Medium     2
seti High       3
seti VeryHigh   4
setProp $ConfigGroup RenderPostProcessEnabled true
option AnimationSmoothing
    setting $Off
        prop $ConfigGroup FrameDBInterpolation true
    setting $On
        prop $ConfigGroup FrameDBInterpolation true
end
if ($cpuLevel >= $cpuLevelHigh)
    setOption AnimationSmoothing $On
else
    setOption AnimationSmoothing $Off
endif
option LightingQuality
    setting $Low
        prop $ConfigGroup ShadowMapSize 1024
        prop $ConfigGroup RenderShadowsEnabled false
	prop $ConfigGroup InteriorLightProbeCount 3
	prop $ConfigGroup LowDetailLightmaps true
	prop $ConfigGroup ShadowColorFormatWorkaround $intelShadowColorFix
	prop $ConfigGroup HighRezTranslucency false
    setting $Medium
        prop $ConfigGroup ShadowMapSize 1024
        prop $ConfigGroup RenderShadowsEnabled true
	prop $ConfigGroup InteriorLightProbeCount 8
	prop $ConfigGroup LowDetailLightmaps false
	prop $ConfigGroup ShadowColorFormatWorkaround $intelShadowColorFix
	prop $ConfigGroup HighRezTranslucency false
    setting $High
        prop $ConfigGroup ShadowMapSize 2048
        prop $ConfigGroup RenderShadowsEnabled true
	prop $ConfigGroup InteriorLightProbeCount 20
	prop $ConfigGroup LowDetailLightmaps false
	prop $ConfigGroup ShadowColorFormatWorkaround $intelShadowColorFix
	prop $ConfigGroup HighRezTranslucency true
end
if (($cardLevel >= $cardLevelHigh) and ($gpumemLevel >= $gpumemLevelHigh))
    setOption LightingQuality $High
elseif (($cardLevel >= $cardLevelMedium) and ($gpumemLevel >= $gpumemLevelMedium))
    setOption LightingQuality $Medium
else
    setOption LightingQuality $Low
endif
option GeneralReflections
    setting $Off
         prop $ConfigGroup WaterReflectionDetail 0
	 prop $ConfigGroup WaterReflectionAreaThreshold 1000
	 prop $ConfigGroup RenderReflectionsEnabled false
    setting $Low
         prop $ConfigGroup WaterReflectionDetail 0
         prop $ConfigGroup WaterReflectionAreaThreshold 1000
	 prop $ConfigGroup RenderReflectionsEnabled true
    setting $Medium
         prop $ConfigGroup WaterReflectionDetail 1
         prop $ConfigGroup WaterReflectionAreaThreshold 300
	 prop $ConfigGroup RenderReflectionsEnabled true
    setting $High
         prop $ConfigGroup WaterReflectionDetail 2
         prop $ConfigGroup WaterReflectionAreaThreshold 50
	 prop $ConfigGroup RenderReflectionsEnabled true
end
if ($cardLevel >= $cardLevelUber and $gpumemLevel >= $gpumemLevelHigh and $ramLevel >= $ramLevelHigh and $cpuLevel >= $cpuLevelHigh)
    setOption GeneralReflections $Medium
elseif ($cardLevel >= $cardLevelLowmedium)
    setOption GeneralReflections $Low
else
    setOption GeneralReflections $Off
endif
if (match("${cardVendor}", "ATI"))
endif
option TextureQuality
	setting $Low
		prop $ConfigGroup DropTexMipsOnLoad     1
		prop $ConfigGroup TextureSizeThreshold  0
		prop $ConfigGroup RttSizeSmall  256
		prop $ConfigGroup RttSizeLarge  256
		prop $ConfigGroup TrilinearEnabled  false
		prop $ConfigGroup AnisoEnabled  false
		prop $ConfigGroup ForceActiveLotObjectsToHighLOD false
	setting $Medium
		prop $ConfigGroup DropTexMipsOnLoad 1
		prop $ConfigGroup TextureSizeThreshold  1024
		prop $ConfigGroup RttSizeSmall  256
		prop $ConfigGroup RttSizeLarge  512
		prop $ConfigGroup TrilinearEnabled  false
		prop $ConfigGroup AnisoEnabled  false
		prop $ConfigGroup ForceActiveLotObjectsToHighLOD true
	setting $High
		prop $ConfigGroup DropTexMipsOnLoad 0
		prop $ConfigGroup TextureSizeThreshold  2048
		prop $ConfigGroup RttSizeSmall  256
		prop $ConfigGroup RttSizeLarge  512
		prop $ConfigGroup TrilinearEnabled  true
		prop $ConfigGroup AnisoEnabled  true
		prop $ConfigGroup ForceActiveLotObjectsToHighLOD true
end
if ($cardLevel >= $cardLevelHigh and $gpumemLevel >= $gpumemLevelMedium and $ramLevel >= $ramLevelMedium)
    setOption TextureQuality $High
elseif ($cardLevel >= $cardLevelLowmedium and $gpumemLevel >= $gpumemLevelMedium)
    setOption TextureQuality $Medium
else
    setOption TextureQuality $Low
endif
option VisualEffects
	setting $Low
            prop $ConfigGroup RenderTreeAlphaEdges false
            prop $ConfigGroup GraphicEffects 1
	    prop $ConfigGroup SwarmQuality 1
	    prop $ConfigGroup RenderPostProcessEnabled false
            prop $ConfigGroup ComplexPostProcessEnabled false
	setting $Medium
            prop $ConfigGroup RenderTreeAlphaEdges true
            prop $ConfigGroup GraphicEffects 2
	    prop $ConfigGroup SwarmQuality 2
            prop $ConfigGroup ComplexPostProcessEnabled false
	setting $High
            prop $ConfigGroup RenderTreeAlphaEdges true
            prop $ConfigGroup GraphicEffects 3
	    prop $ConfigGroup SwarmQuality 3
            prop $ConfigGroup ComplexPostProcessEnabled true
end
if ($cardLevel >= $cardLevelHigh)
    setOption VisualEffects $High
elseif ($cardLevel >= $cardLevelLowmedium)
    setOption VisualEffects $Medium
else
    setOption VisualEffects $Low
endif
option TerrainQuality
    setting $Low
        prop $ConfigGroup TerrainLODBoost 0
    setting $Medium
        prop $ConfigGroup TerrainLODBoost 1
    setting $High
        prop $ConfigGroup TerrainLODBoost 1
end
if (($cardLevel >= $cardLevelUber) and ($cpuLevel >= $cpuLevelUber))
    setOption TerrainQuality $High
elseif (($cardLevel >= $cardLevelHigh) and ($cpuLevel >= $cpuLevelHigh))
    setOption TerrainQuality $Medium
else
    setOption TerrainQuality $Low
endif
option EdgeSmoothing
	setting $Off
		prop $ConfigGroup FSAALevel 0
	setting $Low
	    prop $ConfigGroup FSAALevel 2
	setting $Medium
	    prop $ConfigGroup FSAALevel 4
	setting $High
	    prop $ConfigGroup FSAALevel 8
end
setOption EdgeSmoothing $Off
if ($cardLevel >= $cardLevelUber)
    setOption EdgeSmoothing $Off
elseif ($cardLevel >= $cardLevelHigh)
    setOption EdgeSmoothing $Off
elseif ($cardLevel >= $cardLevelLowmedium)
    setOption EdgeSmoothing $Off
else
    setOption EdgeSmoothing $Off
endif
option ObjectHiding
	setting $Off
		prop $ConfigGroup ObjectHiding 0
	setting $On
		prop $ConfigGroup ObjectHiding 1
end
if (($cardLevel >= $cardLevelHigh) and ($cpuLevel >= $cpuLevelHigh))
    setOption ObjectHiding $Off
else
    setOption ObjectHiding $On
endif
seti AspectDefault 0
seti Aspect4to3 1
seti Aspect5to4 2
seti Aspect16to9 3
seti Aspect16to10 4
option AspectRatio
	setting $AspectDefault
	    prop $ConfigGroup AspectRatio 0
	setting $Aspect4to3
	    prop $ConfigGroup AspectRatio 1
	setting $Aspect5to4
	    prop $ConfigGroup AspectRatio 2
	setting $Aspect16to9
	    prop $ConfigGroup AspectRatio 3
	setting $Aspect16to10
	    prop $ConfigGroup AspectRatio 4
end
setOption AspectRatio $AspectDefault
option ForceSquarePixels
	setting $Off
	    prop $ConfigGroup ForceSquarePixels 0
	setting $On
	    prop $ConfigGroup ForceSquarePixels 1
end
setOption ForceSquarePixels $On
option SimQuality
	setting $Low
	    prop $ConfigGroup RenderSimLODDistances "2, 8, 15, 100"
	    prop $ConfigGroup RenderSimTextureSizes "512, 512, 256, 128"
	    prop $ConfigGroup RenderSimUseSpecular  "0, 0, 0, 0"
        prop $ConfigGroup CASLightMapWidth 1024
        prop $ConfigGroup CASLightMapFilteringEnabled false
        prop $ConfigGroup CASSinglePassShaderEnabled true
        prop $ConfigGroup CASSimpleHairShaderEnabled true
        prop $ConfigGroup CASRenderTargetSize  512
        prop $ConfigGroup MinSimLOD 1
	prop $ConfigGroup ActiveLODLimit 200
	prop $ConfigGroup ShaderSkinCompositing false
	setting $Medium
	    prop $ConfigGroup RenderSimLODDistances "5, 25, 75, 150"
	    prop $ConfigGroup RenderSimTextureSizes "1024, 1024, 256, 128"
	    prop $ConfigGroup RenderSimUseSpecular  "1, 1, 0, 0"
        prop $ConfigGroup CASLightMapWidth 1024
        prop $ConfigGroup CASLightMapFilteringEnabled true
        prop $ConfigGroup CASSinglePassShaderEnabled true
        prop $ConfigGroup CASSimpleHairShaderEnabled false
	    prop $ConfigGroup CASRenderTargetSize  1024
		prop $ConfigGroup MinSimLOD 1
	prop $ConfigGroup ActiveLODLimit 200
	prop $ConfigGroup ShaderSkinCompositing false
	setting $High
	    prop $ConfigGroup RenderSimLODDistances "5, 30, 85, 250"
	    prop $ConfigGroup RenderSimTextureSizes "1024, 1024, 256, 128"
	    prop $ConfigGroup RenderSimUseSpecular  "1, 1, 1, 0"
        prop $ConfigGroup CASLightMapWidth 1024
        prop $ConfigGroup CASLightMapFilteringEnabled true
        prop $ConfigGroup CASSinglePassShaderEnabled false
        prop $ConfigGroup CASSimpleHairShaderEnabled false
	    prop $ConfigGroup CASRenderTargetSize  2048
		prop $ConfigGroup MinSimLOD 1
	prop $ConfigGroup ActiveLODLimit 200
	prop $ConfigGroup ShaderSkinCompositing true
	setting $VeryHigh
	    prop $ConfigGroup RenderSimLODDistances "25, 50, 100, 1000"
	    prop $ConfigGroup RenderSimTextureSizes "2048, 2048, 512, 128"
	    prop $ConfigGroup RenderSimUseSpecular  "1, 1, 1, 1"
        prop $ConfigGroup CASLightMapWidth 1024
        prop $ConfigGroup CASLightMapFilteringEnabled true
        prop $ConfigGroup CASSinglePassShaderEnabled false
        prop $ConfigGroup CASSimpleHairShaderEnabled false
	    prop $ConfigGroup CASRenderTargetSize  2048
		prop $ConfigGroup MinSimLOD 0
	prop $ConfigGroup ActiveLODLimit 200
	prop $ConfigGroup ShaderSkinCompositing true
end
if (($cardLevel >= $cardLevelUber) and ($gpumemLevel >= $gpumemLevelUber) and ($ramLevel >= $ramLevelUber) and ($cpuLevel >= $cpuLevelUber))
	setOption SimQuality $VeryHigh
elseif (($cardLevel >= $cardLevelHigh) and ($gpumemLevel >= $gpumemLevelMedium) and ($ramLevel >= $ramLevelMedium))
	setOption SimQuality $High
elseif (($cardLevel >= $cardLevelLowmedium) and ($gpumemLevel >= $gpumemLevelMedium))
	setOption SimQuality $Medium
else
	setOption SimQuality $Low
endif
option TreeQuality
	setting $Low
	    prop $ConfigGroup RenderTreeLargeLODDistances  "-100, 80, 200, 220"
	    prop $ConfigGroup RenderTreeSmallLODDistances  "-100, 60, 120, 132"
	    prop $ConfigGroup RenderTreeShrubLODDistances  "-100, 60,  60, 66"
	    prop $ConfigGroup RenderTreeGroundLODDistances "-100, 30,  60, 66"
	setting $Medium
	    prop $ConfigGroup RenderTreeLargeLODDistances  "30, 200, 3000, 3300"
	    prop $ConfigGroup RenderTreeSmallLODDistances  "30, 175,  3000, 3300"
	    prop $ConfigGroup RenderTreeShrubLODDistances  "30, 150,  3000, 3300"
	    prop $ConfigGroup RenderTreeGroundLODDistances "15, 45,  3000, 3300"
	setting $High
	    prop $ConfigGroup RenderTreeLargeLODDistances  "30, 300, 3000, 3300"
	    prop $ConfigGroup RenderTreeSmallLODDistances  "30, 250,  3000, 3300"
	    prop $ConfigGroup RenderTreeShrubLODDistances  "30, 200,  3000, 3300"
	    prop $ConfigGroup RenderTreeGroundLODDistances "15, 60,  3000, 3300"
	setting $VeryHigh
	    prop $ConfigGroup RenderTreeLargeLODDistances  "30, 400, 3000, 3300"
	    prop $ConfigGroup RenderTreeSmallLODDistances  "30, 350,  3000, 3300"
	    prop $ConfigGroup RenderTreeShrubLODDistances  "30, 300,  3000, 3300"
	    prop $ConfigGroup RenderTreeGroundLODDistances "15, 80,  3000, 3300"
end
if (($cardLevel >= $cardLevelHigh) and ($cpuLevel >= $cpuLevelHigh))
    setOption TreeQuality $High
elseif (($cardLevel >= $cardLevelLowmedium) and ($cpuLevel >= $cpuLevelMedium))
    setOption TreeQuality $Medium
else
    setOption TreeQuality $Low
endif
option DrawDistance
    setting $Low
        prop $ConfigGroup ClipPlaneDistances "0.25, 0.25, 200, 3000"
	prop $ConfigGroup ClipPlaneMapViewDistances "1.0, 1500.0"
        prop $ConfigGroup ClipPlaneExponent "2.5"
        prop $ConfigGroup ClipPlaneZoomClose "100"
        prop $ConfigGroup ClipPlaneZoomDistant "200"
        prop $ConfigGroup FogDistances "0, 10, 200, 3000"
        prop $ConfigGroup FogCurveModifier "9, 3"
	prop $ConfigGroup ObjectSizeCullFactor "100"
	prop $ConfigGroup AllowImpostorUnload true
    setting $Medium
        prop $ConfigGroup ClipPlaneDistances "0.25, 0.25, 1500, 3000"
	prop $ConfigGroup ClipPlaneMapViewDistances "1.0, 1500.0"
        prop $ConfigGroup ClipPlaneExponent "2.5"
        prop $ConfigGroup ClipPlaneZoomClose "100"
        prop $ConfigGroup ClipPlaneZoomDistant "200"
        prop $ConfigGroup FogDistances "0, 10, 1500, 3000"
        prop $ConfigGroup FogCurveModifier "9, 3"
	prop $ConfigGroup ObjectSizeCullFactor "150"
	prop $ConfigGroup AllowImpostorUnload false
    setting $High
        prop $ConfigGroup ClipPlaneDistances "0.25, 0.25, 3000, 3000"
	prop $ConfigGroup ClipPlaneMapViewDistances "1.0, 1500.0"
        prop $ConfigGroup ClipPlaneExponent "1"
        prop $ConfigGroup ClipPlaneZoomClose "100"
        prop $ConfigGroup ClipPlaneZoomDistant "200"
        prop $ConfigGroup FogDistances "10000, 10, 100000, 3000"
        prop $ConfigGroup FogCurveModifier "1, 3"
	prop $ConfigGroup ObjectSizeCullFactor "200"
	prop $ConfigGroup AllowImpostorUnload false
end
if ($cardLevel >= $cardLevelHigh)
    setOption DrawDistance $High
elseif ($cardLevel >= $cardLevelLowmedium)
    setOption DrawDistance $Medium
else
    setOption DrawDistance $Low
endif
option MaxActiveLots
	setting 1
		prop $ConfigGroup MaxActiveLots 1
                prop $ConfigGroup CameraSpeedThreshold 1.0
	setting 2
		prop $ConfigGroup MaxActiveLots 2
                prop $ConfigGroup CameraSpeedThreshold 2.0
	setting 3
		prop $ConfigGroup MaxActiveLots 3
                prop $ConfigGroup CameraSpeedThreshold 4.0
	setting 4
		prop $ConfigGroup MaxActiveLots 4
                prop $ConfigGroup CameraSpeedThreshold 8.0
	setting 6
		prop $ConfigGroup MaxActiveLots 6
                prop $ConfigGroup CameraSpeedThreshold 16.0
        setting 8
		prop $ConfigGroup MaxActiveLots 8
                prop $ConfigGroup CameraSpeedThreshold 32.0
	setting 12
		prop $ConfigGroup MaxActiveLots 8
                prop $ConfigGroup CameraSpeedThreshold 32.0
	setting 16
		prop $ConfigGroup MaxActiveLots 8
                prop $ConfigGroup CameraSpeedThreshold 32.0
end
if (($cardLevel >= $cardLevelUber) and ($gpumemLevel >= $gpumemLevelHigh) and ($ramLevel >= $ramLevelUber) and ($cpuLevel >= $cpuLevelUber))
    setOption MaxActiveLots 4
elseif (($cardLevel >= $cardLevelHigh) and ($gpumemLevel >= $gpumemLevelMedium) and ($ramLevel >= $ramLevelHigh) and ($cpuLevel >= $cpuLevelHigh))
    setOption MaxActiveLots 3
elseif (($cardLevel >= $cardLevelLowmedium) and ($gpumemLevel >= $gpumemLevelMedium) and ($ramLevel >= $ramLevelMedium) and ($cpuLevel >= $cpuLevelMedium))
    setOption MaxActiveLots 2
else
    setOption MaxActiveLots 1
endif
option NumMaxActiveLotOptions
	setting 4
		prop $ConfigGroup NumMaxActiveLotOptions 4
		prop $ConfigGroup PlatformMaxActiveLots 4
	setting 6
		prop $ConfigGroup NumMaxActiveLotOptions 6
		prop $ConfigGroup PlatformMaxActiveLots 8
end
if ($os64Bit == 1)
	setOption NumMaxActiveLotOptions 6
else
	setOption NumMaxActiveLotOptions 4
endif
if ($cardLevel >= $cardLevelLowmedium)
	setProp $ConfigGroup DefaultResolution "1024,768"
else
	setProp $ConfigGroup DefaultResolution "800,600"
endif
if ($cardLevel >= $cardLevelLowmedium)
	setProp $ConfigGroup RenderPickDelayReadback 0
else
	setProp $ConfigGroup RenderPickDelayReadback 1
endif
option AdvancedRendering
    setting $Off
	    prop $ConfigGroup RenderForceMinspecShaders 1
		prop $ConfigGroup TerrainLODMode 1
		prop $ConfigGroup RenderPostProcessEnabled false
		prop $ConfigGroup RenderShadowsEnabled false
		prop $ConfigGroup CullUndergroundBuildBuyStructures 0
    setting $On
	    prop $ConfigGroup RenderForceMinspecShaders 0
		prop $ConfigGroup TerrainLODMode 0
		prop $ConfigGroup CullUndergroundBuildBuyStructures 0
end
if ($cardLevel >= $cardLevelLowmedium)
    setOption AdvancedRendering $On
else
    setOption AdvancedRendering $Off
endif
if ($threadLevel >= $threadLevelHigh)
    setProp Script Multithreaded 1
else
    setProp Script Multithreaded 0
endif
setProp $ConfigGroup cnp true
set ResourceGroup Resources
seti MemCacheBudgetValue  209715200
if ($ramLevel < $ramLevelMedium)
    seti MemCacheBudgetValue 167772160
endif
setProp $ResourceGroup CacheBudget $MemCacheBudgetValue
option AudioQuality
	setting $Low
	    prop $ConfigGroup AudioQuality 1
	setting $Medium
	    prop $ConfigGroup AudioQuality 2
	setting $High
	    prop $ConfigGroup AudioQuality 3
end
if ($cpuLevel >= $cpuLevelHigh)
    setOption AudioQuality $High
elseif ($cpuLevel >= $cpuLevelMedium)
    setOption AudioQuality $Medium
else
    setOption AudioQuality $Low
endif
seti AudioStereo    1
seti AudioQuad      2
seti Audio51        3
option AudioOutputMode
    setting $AudioStereo
	    prop $ConfigGroup AudioOutputMode $AudioStereo
    setting $AudioQuad
	    prop $ConfigGroup AudioOutputMode $AudioQuad
    setting $Audio51
	    prop $ConfigGroup AudioOutputMode $Audio51
end
setOption AudioOutputMode $AudioStereo
option VoiceLevel
	integer 255
		prop $ConfigGroup VoiceLevel 255
end
setOption VoiceLevel 255
option SoundFXLevel
	integer 255
		prop $ConfigGroup SoundFXLevel 255
end
setOption SoundFXLevel 255
option MusicLevel
	integer 255
		prop $ConfigGroup MusicLevel 255
end
setOption MusicLevel 255
option AmbientLevel
	integer 255
		prop $ConfigGroup AmbientLevel 255
end
setOption AmbientLevel 255
option FocusMute
	setting $Off
	    prop $ConfigGroup FocusMute 0
	setting $On
	    prop $ConfigGroup FocusMute 1
end
setOption FocusMute $On
option VoiceMute
	setting $Off
	    prop $ConfigGroup VoiceMute 0
	setting $On
	    prop $ConfigGroup VoiceMute 1
end
setOption VoiceMute $Off
option SoundFXMute
	setting $Off
	    prop $ConfigGroup SoundFXMute 0
	setting $On
	    prop $ConfigGroup SoundFXMute 1
end
setOption SoundFXMute $Off
option MusicMute
	setting $Off
	    prop $ConfigGroup MusicMute 0
	setting $On
	    prop $ConfigGroup MusicMute 1
end
setOption MusicMute $Off
option AmbientMute
	setting $Off
	    prop $ConfigGroup AmbientMute 0
	setting $On
	    prop $ConfigGroup AmbientMute 1
end
setOption AmbientMute $Off
if ($cpuLevel < $cpuLevelMedium)
   setProp $ConfigGroup DynamicAvoidance 0
endif
option EdgeScrolling
	setting $Off
	    prop $ConfigGroup EdgeScrolling 0
	setting $On
	    prop $ConfigGroup EdgeScrolling 1
end
setOption EdgeScrolling $Off
option EdgeScrollingWarning
	setting $Off
	    prop $ConfigGroup EdgeScrollingWarning 0
	setting $On
	    prop $ConfigGroup EdgeScrollingWarning 1
end
setOption EdgeScrollingWarning $On
option SupressOpportunityDialogs
	setting $Off
	    prop $ConfigGroup SupressOpportunityDialogs 0
	setting $On
	    prop $ConfigGroup SupressOpportunityDialogs 0
end
setOption SupressOpportunityDialogs 0
option SuppressOpportunityDialogsWarningProducts
	integer 65536
		prop $ConfigGroup SuppressOpportunityDialogsWarningProducts 0
end
setOption SuppressOpportunityDialogsWarningProducts 0
option SimWhileMinimized
	setting $Off
	    prop $ConfigGroup SimWhileMinimized 0
	setting $On
	    prop $ConfigGroup SimWhileMinimized 1
end
setOption SimWhileMinimized $Off
option TwelveHourClock
	setting $Off
	    prop $ConfigGroup TwelveHourClock 0
	setting $On
	    prop $ConfigGroup TwelveHourClock 1
end
if ($clockFormat == 12)
    setOption TwelveHourClock $On
else
    setOption TwelveHourClock $Off
endif
option ShowPlacementGrid
	setting $Off
	    prop $ConfigGroup ShowPlacementGrid 0
	setting $On
	    prop $ConfigGroup ShowPlacementGrid 1
end
setOption ShowPlacementGrid $Off
option AutonomyLevel
	setting $Off
	    prop $ConfigGroup AutonomyLevel 0
	setting $Low
	    prop $ConfigGroup AutonomyLevel 1
	setting $Medium
	    prop $ConfigGroup AutonomyLevel 2
end
option DisableAutonomyForSelectedSim
	setting $Off
		prop $ConfigGroup Disable0utonomyForSelectedSim 0
	setting $On
		prop $ConfigGroup DisableAutonomyForSelectedSim 1
end
setOption AutonomyLevel $Medium
option PetAutonomyLevel
	setting $Off
	    prop $ConfigGroup PetAutonomyLevel 0
	setting $Low
	    prop $ConfigGroup PetAutonomyLevel 1
	setting $Medium
	    prop $ConfigGroup PetAutonomyLevel 2
end
setOption PetAutonomyLevel $Medium
seti Short 0
seti Medium 2
seti Long 4
option AgingInterval
	setting $Short
	    prop $ConfigGroup AgingInterval 0
	setting $Low
	    prop $ConfigGroup AgingInterval 1
	setting $Medium
	    prop $ConfigGroup AgingInterval 2
	setting $High
	    prop $ConfigGroup AgingInterval 3
	setting $Long
	    prop $ConfigGroup AgingInterval 4
end
setOption AgingInterval $Medium
option EnableAging
	setting $Off
	    prop $ConfigGroup EnableAging 0
	setting $On
	    prop $ConfigGroup EnableAging 1
end
setOption EnableAging $On
option EnableTutorial
	setting $Off
	    prop $ConfigGroup EnableTutorial 0
	setting $On
	    prop $ConfigGroup EnableTutorial 1
end
setOption EnableTutorial $On
option EnableIntroTutorial
	setting $Off
	    prop $ConfigGroup EnableIntroTutorial 0
	setting $On
	    prop $ConfigGroup EnableIntroTutorial 1
end
setOption EnableIntroTutorial $On
option EnableTombResets
	setting $Off
	    prop $ConfigGroup EnableTombResets 0
	setting $On
	    prop $ConfigGroup EnableTombResets 1
end
setOption EnableTombResets $On
option EnableInGameStore
	setting $Off
	    prop $ConfigGroup EnableInGameStore 0
	setting $On
	    prop $ConfigGroup EnableInGameStore 1
end
setOption EnableInGameStore $On
option EnableTelemetry
	setting $Off
	    prop $ConfigGroup EnableTelemetry 0
	setting $On
	    prop $ConfigGroup EnableTelemetry 1
end
setOption EnableTelemetry $On
seti MemoriesEnabled        1
seti NotificationsDisabled  2
seti MemoriesDisabled       3
option EnableMemories
    setting $MemoriesEnabled
        prop $ConfigGroup EnableMemories $MemoriesEnabled
    setting $NotificationsDisabled
        prop $ConfigGroup EnableMemories $NotificationsDisabled
    setting $MemoriesDisabled
        prop $ConfigGroup EnableMemories $MemoriesDisabled
end
setOption EnableMemories $MemoriesEnabled
option AgingStageLengthBaby
	integer 255
		prop $ConfigGroup AgingStageLengthBaby 255
end
setOption AgingStageLengthBaby 3
option AgingStageLengthToddler
	integer 255
		prop $ConfigGroup AgingStageLengthToddler 255
end
setOption AgingStageLengthToddler 7
option AgingStageLengthChild
	integer 255
		prop $ConfigGroup AgingStageLengthChild 255
end
setOption AgingStageLengthChild 7
option AgingStageLengthTeen
	integer 255
		prop $ConfigGroup AgingStageLengthTeen 255
end
setOption AgingStageLengthTeen 14
option AgingStageLengthYoungAdult
	integer 255
		prop $ConfigGroup AgingStageLengthYoungAdult 255
end
setOption AgingStageLengthYoungAdult 21
option AgingStageLengthAdult
	integer 255
		prop $ConfigGroup AgingStageLengthAdult 255
end
setOption AgingStageLengthAdult 21
option AgingStageLengthElder
	integer 255
		prop $ConfigGroup AgingStageLengthElder 255
end
setOption AgingStageLengthElder 17
option EnableInteractiveLoading
	setting $Off
	    prop $ConfigGroup EnableInteractiveLoading 0
	setting $On
	    prop $ConfigGroup EnableInteractiveLoading 1
end
setOption EnableInteractiveLoading $On
option AgingStageLengthPuppy
	integer 255
		prop $ConfigGroup AgingStageLengthPuppy 255
end
setOption AgingStageLengthPuppy 0
option AgingStageLengthDogAdult
	integer 255
		prop $ConfigGroup AgingStageLengthDogAdult 255
end
setOption AgingStageLengthDogAdult 0
option AgingStageLengthDogElder
	integer 255
		prop $ConfigGroup AgingStageLengthDogElder 255
end
setOption AgingStageLengthDogElder 0
option AgingStageLengthKitten
	integer 255
		prop $ConfigGroup AgingStageLengthKitten 255
end
setOption AgingStageLengthKitten 0
option AgingStageLengthCatAdult
	integer 255
		prop $ConfigGroup AgingStageLengthCatAdult 255
end
setOption AgingStageLengthCatAdult 0
option AgingStageLengthCatElder
	integer 255
		prop $ConfigGroup AgingStageLengthCatElder 255
end
setOption AgingStageLengthCatElder 0
option AgingStageLengthFoal
	integer 255
		prop $ConfigGroup AgingStageLengthFoal 255
end
setOption AgingStageLengthFoal 0
option AgingStageLengthHorseAdult
	integer 255
		prop $ConfigGroup AgingStageLengthHorseAdult 255
end
setOption AgingStageLengthHorseAdult 0
option AgingStageLengthHorseElder
	integer 255
		prop $ConfigGroup AgingStageLengthHorseElder 255
end
setOption AgingStageLengthHorseElder 0
option LunarCycleLength
	integer 255
		prop $ConfigGroup LunarCycleLength 255
end
setOption LunarCycleLength 3
option LunarPhaseLength
	integer 255
		prop $ConfigGroup LunarPhaseLength 255
end
setOption LunarPhaseLength 0
option EnableLunarCycle
	setting $Off
	    prop $ConfigGroup EnableLunarCycle 0
	setting $On
	    prop $ConfigGroup EnableLunarCycle 1
end
setOption EnableLunarCycle $On
option EnableLunarPhase
	setting $Off
	    prop $ConfigGroup EnableLunarPhase 0
	setting $On
	    prop $ConfigGroup EnableLunarPhase 1
end
setOption EnableLunarPhase $Off
option EnableStoryProgression
	setting $Off
	    prop $ConfigGroup EnableStoryProgression 0
	setting $On
	    prop $ConfigGroup EnableStoryProgression 1
end
setOption EnableStoryProgression $On
option EnableVampires
	setting $Off
	    prop $ConfigGroup EnableVampires 0
	setting $On
	    prop $ConfigGroup EnableVampires 1
end
setOption EnableVampires $On
option EnableWerewolves
	setting $Off
	    prop $ConfigGroup EnableWerewolves 0
	setting $On
	    prop $ConfigGroup EnableWerewolves 1
end
setOption EnableWerewolves $On
option EnablePets
	setting $Off
	    prop $ConfigGroup EnablePets 0
	setting $On
	    prop $ConfigGroup EnablePets 1
end
setOption EnablePets $On
option EnableCelebrities
	setting $Off
	    prop $ConfigGroup EnableCelebrities 0
	setting $On
	    prop $ConfigGroup EnableCelebrities 1
end
setOption EnableCelebrities $On
option EnableFairies
	setting $Off
	    prop $ConfigGroup EnableFairies 0
	setting $On
	    prop $ConfigGroup EnableFairies 1
end
setOption EnableFairies $On
option EnableWitches
	setting $Off
	    prop $ConfigGroup EnableWitches 0
	setting $On
	    prop $ConfigGroup EnableWitches 1
end
setOption EnableWitches $On
option EnableHorses
	setting $Off
	    prop $ConfigGroup EnableHorses 0
	setting $On
	    prop $ConfigGroup EnableHorses 1
end
setOption EnableHorses $On
option EnableOptOutCeleb
	setting $Off
	    prop $ConfigGroup EnableOptOutCeleb 0
	setting $On
	    prop $ConfigGroup EnableOptOutCeleb 1
end
setOption EnableOptOutCeleb $Off
option ReceiveConnectTNS
	setting $Off
	    prop $ConfigGroup ReceiveConnectTNS 0
	setting $On
	    prop $ConfigGroup ReceiveConnectTNS 1
end
setOption ReceiveConnectTNS $On
option ReceivedDevGift
	setting $On
		prop $ConfigGroup ReceivedDevGift 1
	setting $Off
		prop $ConfigGroup ReceivedDevGift 0
end
setOption ReceivedDevGift $Off
option PostFilterFlags
		integer 255
end
setOption PostFilterFlags 0
option RequireLoginBeforeLoad
	setting $Off
	    prop $ConfigGroup RequireLoginBeforeLoad 0
	setting $On
	    prop $ConfigGroup RequireLoginBeforeLoad 1
end
option SummerLength
	integer 255
		prop $ConfigGroup SummerLength 255
end
setOption SummerLength 7
option FallLength
	integer 255
		prop $ConfigGroup FallLength 255
end
setOption FallLength 7
option WinterLength
	integer 255
		prop $ConfigGroup WinterLength 255
end
setOption WinterLength 7
option SpringLength
	integer 255
		prop $ConfigGroup SpringLength 255
end
setOption SpringLength 7
option SummerEnabled
	setting $Off
	    prop $ConfigGroup SummerEnabled 0
	setting $On
	    prop $ConfigGroup SummerEnabled 1
end
setOption SummerEnabled $On
option FallEnabled
	setting $Off
	    prop $ConfigGroup FallEnabled 0
	setting $On
	    prop $ConfigGroup FallEnabled 1
end
setOption FallEnabled $On
option WinterEnabled
	setting $Off
	    prop $ConfigGroup WinterEnabled 0
	setting $On
	    prop $ConfigGroup WinterEnabled 1
end
setOption WinterEnabled $On
option SpringEnabled
	setting $Off
	    prop $ConfigGroup SpringEnabled 0
	setting $On
	    prop $ConfigGroup SpringEnabled 1
end
setOption SpringEnabled $On
option IsCelcius
	setting $Off
	    prop $ConfigGroup IsCelcius 0
	setting $On
	    prop $ConfigGroup IsCelcius 1
end
if (match(${locale}, "en-us"))
    setOption IsCelcius $Off
else
    setOption IsCelcius $On
endif
option FogEnabled
	setting $Off
	    prop $ConfigGroup FogEnabled 0
	setting $On
	    prop $ConfigGroup FogEnabled 1
end
setOption FogEnabled $On
option RainEnabled
	setting $Off
	    prop $ConfigGroup RainEnabled 0
	setting $On
	    prop $ConfigGroup RainEnabled 1
end
setOption RainEnabled $On
option SnowEnabled
	setting $Off
	    prop $ConfigGroup SnowEnabled 0
	setting $On
	    prop $ConfigGroup SnowEnabled 1
end
setOption SnowEnabled $On
option HailEnabled
	setting $Off
	    prop $ConfigGroup HailEnabled 0
	setting $On
	    prop $ConfigGroup HailEnabled 1
end
setOption HailEnabled $On
option InvertHorizontalRotation
	setting $Off
	    prop $ConfigGroup InvertHorizontalRotation 0
	setting $On
	    prop $ConfigGroup InvertHorizontalRotation 1
end
setOption InvertHorizontalRotation $Off
option InvertVerticalRotation
	setting $Off
	    prop $ConfigGroup InvertVerticalRotation 0
	setting $On
	    prop $ConfigGroup InvertVerticalRotation 1
end
setOption InvertVerticalRotation $Off
seti VidSizeLow 0
seti VidSizeMedium 1
seti VidSizeLarge 2
option VideoCaptureSize
	setting $VidSizeLow
		prop $ConfigGroup VideoCaptureSize 0
	setting $VidSizeMedium
		prop $ConfigGroup VideoCaptureSize 1
	setting $VidSizeLarge
		prop $ConfigGroup VideoCaptureSize 2
end
setOption VideoCaptureSize $VidSizeMedium
seti VidQualityLow 0
seti VidQualityMedium 1
seti VidQualityHigh 2
seti VidQualityUncompressed 3
option VideoCaptureQuality
	setting $VidQualityLow
		prop $ConfigGroup VideoCaptureQuality 0
	setting $VidQualityMedium
		prop $ConfigGroup VideoCaptureQuality 1
	setting $VidQualityHigh
		prop $ConfigGroup VideoCaptureQuality 2
	setting $VidQualityUncompressed
		prop $ConfigGroup VideoCaptureQuality 3
end
setOption VideoCaptureQuality $VidQualityHigh
seti VidSoundDisabled 0
seti VidSoundEnabled 1
option VideoCaptureSound
	setting $VidSoundDisabled
		prop $ConfigGroup VideoCaptureSound 0
	setting $VidSoundEnabled
		prop $ConfigGroup VideoCaptureSound 1
end
setOption VideoCaptureSound $VidSoundDisabled
option VideoCaptureTime
	integer 60
		prop $ConfigGroup VideoCaptureTime 60
end
setOption VideoCaptureTime 60
seti VidHideUIDisable 0
seti VidHideUIEnable 1
option VideoCaptureHideUI
	setting $VidHideUIDisable
		prop $ConfigGroup VideoCaptureHideUI 0
	setting $VidHideUIEnable
		prop $ConfigGroup VideoCaptureHideUI 1
end
setOption VideoCaptureHideUI $VidHideUIEnable
if ($configParserErrorCode == 0)
    seti configParserErrorCode 1
endif
logSystemInfo "=== Application info ==="
logSystemInfo "Name:            ${appName}"
logSystemInfo "Version:         ${version}"
logSystemInfo "Build:           ${buildType}"
logSystemInfo "=== Rating info ==="
logSysteminfo "GPU: ${cardLevel} GPU Memory: ${gpumemLevel} CPU: ${cpuLevel} RAM: ${ramLevel} CPU Speed: ${cpuSpeed} Threading: ${threadLevel}"
logSysteminfo "Adjusted CPU: ${adjustedCPU} RAM: ${memory} Adjusted RAM: ${adjustedMemory} Cores: ${cpuCount}"
logSystemInfo "=== Machine info ==="
logSystemInfo "OS version:      ${osVersion}"
if ($osMajorVersion >= 6)
    logSystemInfo "OS prod type:    ${osProductType}"
endif
logSystemInfo "OS major ver:    ${osMajorVersion}"
logSystemInfo "OS minor ver:    ${osMinorVersion}"
logSystemInfo "OS SP major ver: ${osServicePackMajorVersion}"
logSystemInfo "OS SP minor ver: ${osServicePackMinorVersion}"
logSystemInfo "OS is 64Bit: 	${os64Bit}"
logSystemInfo "CPU:             ${cpu}"
logSystemInfo "    Brand:       ${cpuBrand}"
logSystemInfo "    Family:      ${cpuFamily}"
logSystemInfo "    Model:       ${cpuModel}"
logSystemInfo "    Cores:       ${cpuCount}"
logSystemInfo "    HT:          ${hyperthreading}"
logSystemInfo "    x64:         ${cpuArchitecture}"
logSystemInfo "Memory:          ${memory}MB"
logSystemInfo "Free memory:     ${freeMemory}MB"
logSystemInfo "User:            ${userName}"
logSystemInfo "Computer:        ${computerName}"
logSystemInfo "=== Graphics device info ==="
logSystemInfo "Number:          ${deviceNumber}"
logSystemInfo "Name (driver):   ${cardNameText}"
logSystemInfo "Name (database): ${cardName} [Found: ${isCardFound}, Matched: ${isCardMatched}]"
logSystemInfo "Vendor:          ${cardVendor}"
logSystemInfo "Chipset:         ${cardChipset}"
logSystemInfo "Driver:          ${driverName}, Version: ${driverVersion}"
logSystemInfo "Driver version:  ${driverBuild}"
logSystemInfo "Monitor:         ${monitorName}"
if ($textureMemorySizeOK)
    logSystemInfo "Texture memory:  ${textureMemory}MB"
else
    logSystemInfo "Texture memory:  ${textureMemory}MB <<OVERRIDE>>"
endif
logSystemInfo "Vertex program:  ${vsMajor}.${vsMinor}"
logSystemInfo "Pixel program:   ${psMajor}.${psMinor}"
logSystemInfo "Hardware TnL:    ${hwTnL}"
log "Finished Config File"
# xa37dd45ffe100bfffcc9753aabac325f07cb3fa231144fe2e33ae4783feead2b8a73ff021fac326df0ef9753ab9cdf6573ddff0312fab0b0ff39779eaff312a4f5de65892ffee33a44569bebf21f66d22e54a22347efd375981188743afd99baacc342d88a99321235798725fedcbf43252669dade32415fee89da543bf23d4ex 
